HashMap 与 ConcurrentHashMap:
  数据结构
    数组+链表
    jdk8 之后 数据+链表+红黑树(链表上超过8会转存为红黑树)
  扩容
    给定的默认容量为 16，负载因子为 0.75。Map 在使用过程中不断的往里面存放数据，
    当数量达到了 16 * 0.75 = 12 就需要将当前 16 的容量进行扩容，而扩容这个过程涉及到 rehash、复制数据等操作，
    所以非常消耗性能。
  HashMap 非线程安全 只能通过Collections.synchronizedMap(hashMap)实现对读写进行加锁,性能低
  ConcurrentHashMap
    1.7之前用的Segment分段锁实现并发更新操作 首先将数据分成一段一段的存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据的时候，其他段的数据也能被其他线程访问。
    1.8之后 CAS+Synchronized来保证并发更新的安全

